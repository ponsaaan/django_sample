version: '3.7'

services:
    # サービス名は自由に設定
    django:
        # コンテナ名
        container_name: django
        # appディレクトリの中から`Dockerfile`を探す
        build: ./app
        # 正常起動後に実行するコマンド
        command: gunicorn django_demo.wsgi:application --bind 0.0.0.0:8000
        # データを永続化させる場合の設定。`host:container`でパスを記載
        volumes:
            - ./app/:/usr/src/app/
        # 開放するポートを指定。`host:container`でポートを記載
        ports:
            - 8000:8000
        env_file:
            # 環境変数に設定するファイル
            - ./app/.env
        # 接続するサービスを指定
        depends_on:
            - postgres

    postgres:
        container_name: postgres
        build: ./postgres
        # データベースの永続化
        # ホストのディレクトリにマウントしない様に、先頭に`./`をつけない
        volumes:
            - postgres_data:/var/lib/postgresql/data
            # down -vなどでボリュームがない時などを含めた初回起動時に実行されるファイルを指定
            - ./postgres/sql:/docker-entrypoint-initdb.d
        env_file: ./postgres/.env_db
        # su権限を持つ、指定されたユーザーと同じ名前のデータベースを作成
        # valueはdjangoサービスで指定したものと同じ様に記載する
        ports:
            # ホスト側のポートはローカルのpsqlとバッティングするので5432以外にする
            - 5433:5432

    nginx:
        container_name: nginx
        build: ./nginx
        volumes:
            - ./django/static:/usr/src/app/static
        ports:
            - 80:80
        depends_on:
            - django

# トップレベルに書く「名前付きvolumes」は複数サービスから参照できる
volumes:
    postgres_data:

